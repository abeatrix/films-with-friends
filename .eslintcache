[{"/Users/gabtorres/sei/react/movie-app-react/src/index.js":"1","/Users/gabtorres/sei/react/movie-app-react/src/reportWebVitals.js":"2","/Users/gabtorres/sei/react/movie-app-react/src/App.js":"3"},{"size":500,"mtime":1607028719364,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1607028307986,"results":"6","hashOfConfig":"5"},{"size":1665,"mtime":1607029992855,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"cpsd81",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/gabtorres/sei/react/movie-app-react/src/index.js",[],["16","17"],"/Users/gabtorres/sei/react/movie-app-react/src/reportWebVitals.js",[],"/Users/gabtorres/sei/react/movie-app-react/src/App.js",["18"],"import logo from './logo.svg';\nimport './App.css';\n\nimport ApolloClient from 'apollo-boost';\nimport { gql } from 'apollo-boost';\nimport { ApolloProvider, useQuery, useMutation } from '@apollo/react-hooks'\n\n\nconst client = new ApolloClient({\n  uri: 'https://workers-graphql-server.gabtorres.workers.dev/',\n})\n\nconst GET_POSTS = gql`\n  {\n    post {\n      id\n      text\n    }\n  }\n`\n\nconst Posts = () => {\n  const { loading, error, data } = useQuery(GET_POSTS)\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :</p>\n\n  return (\n    <>\n        {data.post.map( ({ text, id }) => (\n          <h3 key={id}>{text}</h3>\n        ))}\n    </>\n  );\n}\n\nfunction AddPost() {\n  let input\n  const [createPost] = useMutation(\n    gql `\n      mutation createPost($text: String!) {\n        createPost(text: $text){\n          id\n          text\n        }\n      }\n    `,\n    {\n      update(\n        cache,\n        {\n          data: { createPost },\n        },\n      ) {\n        const { post } = cache.readQuery({query: GET_POSTS})\n        cache.writeQuery({\n          query: GET_POSTS,\n          data: { post: [createPost].concat(post)}\n        })\n      }\n    }\n  )\n\n  return (\n    <>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          createPost({ variables: { text: input.value } })\n          input.value = ''\n        }}\n      >\n        <input\n          ref={node => {\n            input = node\n          }}\n        />\n        <button type=\"submit\">Add Post</button>\n      </form>\n    </>\n  )\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Posts/>\n      <AddPost/>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":1,"column":8,"nodeType":"25","messageId":"26","endLine":1,"endColumn":12},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]